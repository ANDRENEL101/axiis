<?xml version="1.0" encoding="utf-8"?>
<DataCanvas xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:degrafa="http://www.degrafa.com/2007"
	xmlns:layouts="org.axiis.layouts.*"
	xmlns="org.axiis.*" xmlns:axiis="http://www.axiis.org/2009" xmlns:transform="com.degrafa.transform.*">
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import com.degrafa.core.IGraphicsFill;
			
			private function computeY(index:int):Number
			{
				//var toReturn:Number = index == 0 ? height : computeHeight(index - 1);
				//trace("y " + index + " " + toReturn)
				//return toReturn;
				return height;
			}
			
			private function computeHeight(index:int):Number
			{
				var arr:ArrayCollection = dataProvider as ArrayCollection;
				if(!arr)
					return NaN;
				
				var currItem:Object = arr.getItemAt(index);
				if(index == 0)
					return scale.valueToLayout(currItem['count']);
				
				var prevItem:Object = arr.getItemAt(index - 1);
				//var delta:Number = Math.abs(currItem['count'] -  prevItem['count']);
				//var delta:Number = currItem['count'] ;
				//var scaledValue:Number = scale.valueToLayout(delta);
				//trace("height " +index + " " + scaledValue)
				//return scaledValue;
				return 100;
			}
			
			private function computeFill(o:Object):IGraphicsFill
			{
				var arr:ArrayCollection = dataProvider as ArrayCollection;
				if(!arr)
					return null;
				
				var index:int = arr.getItemIndex(o);
				if(index == 0)
				{
					return initialFill;
				}
				else if(index == arr.length - 1)
				{
					return finalFill;
				}
				else
				{
					var prev:Object = arr.getItemAt(index - 1);
					return prev.count > o.count ? minusFill : plusFill;
				}
			}
		]]>
	</mx:Script>
	
	<mx:Object id="dataProvider"/>
	
	<axiis:LinearScale id="scale" 
		dataProvider="{dataProvider}"
		dataField="count"
		minValue="0" 
		minLayout="0"
		maxLayout="{height}"/>
	
	<layouts>
		<layouts:HorizontalWaterfallLayout id="waterfallLayout" dataProvider="{dataProvider}" width="{width}" height="{height}">
			<layouts:geometries>
				<degrafa:RegularRectangle
					x="{waterfallLayout.currentReferenceGeometry.x}"
					y="{height}"
					width="{waterfallLayout.currentReferenceGeometry.width}"
					height="{scale.valueToLayout(waterfallLayout.currentDatum['count'])}"
					fill="{computeFill(waterfallLayout.currentDatum)}">
					<degrafa:transform>
						<degrafa:ScaleTransform scaleY="-1" registrationPoint="topLeft"/>
					</degrafa:transform>
				</degrafa:RegularRectangle>
				<degrafa:RasterText fontSize="11" fontFamily="Verdana"
					text="{waterfallLayout.currentDatum['name']}"
					x="{waterfallLayout.currentReferenceGeometry.x}"
					y="{height}"/>
			</layouts:geometries>
		</layouts:HorizontalWaterfallLayout>
	</layouts>
	
	<fills>
		<degrafa:SolidFill id="initialFill" color="blue"/>
		<degrafa:SolidFill id="plusFill" color="green"/>
		<degrafa:SolidFill id="minusFill" color="red"/>
		<degrafa:SolidFill id="finalFill" color="magenta"/>
	</fills>
	
</DataCanvas>
