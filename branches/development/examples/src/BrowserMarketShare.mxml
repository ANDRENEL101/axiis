<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:axiis="http://www.axiis.org/2009"
	xmlns:geometry="com.degrafa.geometry.*"
	xmlns:degrafa="http://www.degrafa.com/2007"
	layout="absolute"
	applicationComplete="application1_applicationCompleteHandler(event)" xmlns:Examples="Examples.*">

	<mx:Style source="styles/Axiis_Examples.css"/>

	<mx:Script>
		<![CDATA[
			import mx.utils.ObjectProxy;
			import org.axiis.core.AxiisSprite;
			import org.axiis.managers.FreeDataTipManager;
			import com.degrafa.geometry.Wedge;
			import org.axiis.data.DataSet;
			import mx.events.FlexEvent;

			[Bindable]
			private var currentArc:Number = 0;
			
			private var browserColors:Object = {
				'IE8':0x00ddff,
				'IE7':0x00ccee,
				'IE6':0x0099ff,
				'IE5':0x0066ff,
				'IE4':0x003399,
				'Firefox':0xff9900,
				'Mozilla':0x996600,
				'Chrome':0x00ff00,
				'Safari':0x60779C,
				'Opera':0xff0000,
				'Opera 7':0xff5555,
				'Opera 8':0xff3333,
				'AOL':0xFFD52F,
				'Netscape 7/8':0x66ff66,
				'Netscape 7':0x66ff66,
				'Netscape 5':0x88ff88,
				'Netscape 4':0x99ff99,
				'Netscape 3':0xaaffaa
			}

			protected function application1_applicationCompleteHandler(event:FlexEvent):void
			{
				var browserNames:Array = [];
				var outputXML:XML = new XML("<data/>")
				var currentYear:Number;
				var currentMonth:String;
				var browsersForYear:Array = [];
				for each (var subTable:XML in tableData.tr)
				{
					var firstChildText:String = subTable.children()[0].text()
					var firstChildNumber:Number = parseInt(firstChildText);

					// This is a year row - the rest of the columns have the browser names
					if (!isNaN(firstChildNumber))
					{
						currentYear = firstChildNumber;
						browsersForYear = [];
						var browserNameElements:XMLList = subTable.children();
						for (var a:int = 1; a < browserNameElements.length(); a++)
						{
							var browserNameElement:XML = browserNameElements[a];
							var browserName:String = browserNameElement.text().toString();
							browsersForYear.push(browserName);
							if(browserNames.indexOf(browserName) == -1)
								browserNames.push(browserName);
						}
					}
					// This is a month row - it has the market share percentages
					else
					{
						currentMonth = firstChildText;
						if (currentMonth != "")
						{
							var monthXML:XML = new XML("<month/>")
							monthXML.@value = currentMonth + " " + currentYear;
							var marketShareElements:XMLList = subTable.children();
							for (var a:int = 1; a < browserNameElements.length(); a++)
							{
								var browserXML:XML = new XML("<browser/>")
								browserXML.@name = browsersForYear[a - 1];

								var marketShareElement:String = marketShareElements[a].text().toString();
								if (marketShareElement == "")
									browserXML.@share = 0;
								else
									browserXML.@share = parseFloat(marketShareElements[a].text().toString().split("%")[0]) / 100;
								browserXML.@month = currentMonth + " " + currentYear;
								monthXML.appendChild(browserXML);
							}
							outputXML.appendChild(monthXML);
						}
					}
				}
				var ds:DataSet = new DataSet();
				ds.processXmlString(outputXML.toString());
				radialLayout.dataProvider = ds.data.object.data.month.source.concat().reverse();
				
				browserNames.sort();
				browserNames.push("Other/Missing data");
				legendLayout.dataProvider = browserNames;
			}
			
			private function labelDataTip(axiisSprite:AxiisSprite):String
			{
				return axiisSprite.data.month + "\n" + axiisSprite.data.name + ": " + nf.format(axiisSprite.data.share * 100) + "%";
			}
		]]>
	</mx:Script>

	<mx:XML id="tableData"
		source="data/browser_stats.xml"/>

	<mx:NumberFormatter id="nf" precision="2"/>

	<axiis:LinearScale id="arcScale"
		minValue="0"
		maxValue="1"
		minLayout="0"
		maxLayout="359.99"/>

	<Examples:ExampleBackground width="100%" height="100%" title="Historical Browser Market Shares" subTitle="Custom Visualziation"/>

	<mx:Label text="August 2009" horizontalCenter="0" top="100"/>

	<axiis:DataCanvas id="dc"
		width="95%"
		height="95%"
		top="120"
		horizontalCenter="0">
		<axiis:layouts>
			<axiis:ConcentricWedgeLayout id="radialLayout"
				width="{dc.width}"
				height="{dc.height - 10}"
				innerRadius="52">
				<axiis:layouts>
					<axiis:BaseLayout id="arcLayout"
						dataProvider="{radialLayout.currentDatum.browser}"
						width="{radialLayout.width}"
						height="{radialLayout.height}"
						preRender="{currentArc = 0}"
						itemPreDraw="{currentArc += arcScale.valueToLayout(arcLayout.currentDatum.share)}"
						dataTipManager="{new FreeDataTipManager()}"
						dataTipLabelFunction="{labelDataTip}">
						<axiis:drawingGeometries>
							<geometry:Wedge id="wedge"
								centerX="{radialLayout.width/2}"
								centerY="{radialLayout.height/2}"
								innerRadius="{radialLayout.currentReference['innerRadius']}"
								outerRadius="{radialLayout.currentReference['outerRadius']}"
								startAngle="{270 + currentArc - arcScale.valueToLayout(arcLayout.currentDatum.share)}"
								arc="{arcScale.valueToLayout(arcLayout.currentDatum.share)}">
								<geometry:stroke>
									<degrafa:SolidStroke id="wedgeStroke" color="0"/>
								</geometry:stroke>
								<geometry:fill>
									<degrafa:SolidFill id="wedgeFill" color="{browserColors[arcLayout.currentDatum.name]}"/>
								</geometry:fill>
							</geometry:Wedge>
						</axiis:drawingGeometries>
						<axiis:states>
							<axiis:State enterStateEvent="mouseOver"
								exitStateEvent="mouseOut"
								targets="{[wedgeFill]}"
								properties="{['color']}"
								values="{[0xff00ff]}"/>
						</axiis:states>
					</axiis:BaseLayout>
				</axiis:layouts>
			</axiis:ConcentricWedgeLayout>
		</axiis:layouts>
		<axiis:filters>
			<mx:DropShadowFilter/>
		</axiis:filters>
	</axiis:DataCanvas>
		
	<mx:Label text="January 2002" horizontalCenter="0" verticalCenter="55"/>
	
	<axiis:DataCanvas id="legendDC"
		width="200"
		height="{legendLayout.itemCount * 18}"
		bottom="5"
		left="5">
		<axiis:layouts>
			<axiis:VBoxLayout id="legendLayout"
				width="{legendDC.width}"
				height="{legendDC.height}"
				showDataTips="false">
				<axiis:drawingGeometries>
					<degrafa:RegularRectangle x="{legendLayout.currentReference.x}"
						y="{legendLayout.currentReference.y}"
						width="18"
						height="18">
						<degrafa:stroke>
							<degrafa:SolidStroke color="0"/>
						</degrafa:stroke>
						<degrafa:fill>
							<degrafa:SolidFill color="{browserColors[legendLayout.currentDatum]}"
								alpha="{legendLayout.currentDatum == 'Other/Missing data' ? 0 : 1}"/>
						</degrafa:fill>
					</degrafa:RegularRectangle>
					<degrafa:RasterText x="22"
						y="{legendLayout.currentReference.y}"
						text="{legendLayout.currentDatum}"/>
				</axiis:drawingGeometries>
			</axiis:VBoxLayout>
		</axiis:layouts>
	</axiis:DataCanvas>
		
</mx:Application>
