<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:scale="org.axiis.layouts.scale.*"
	layout="vertical"
	creationComplete="start()" xmlns:utils="flash.utils.*">
	
	<mx:Script>
		<![CDATA[
			import org.axiis.layouts.scale.DateTimeScale;
			import org.axiis.layouts.scale.LinearScale;
			import org.axiis.layouts.scale.LogScale;
			import org.axiis.layouts.scale.CategoricalScale;
			import mx.controls.Label;
			import mx.collections.ArrayCollection;
			
			private function start():void
			{
				testLinearScale();
				trace();
				testLogScale();
				trace();
				testCategoricalScale();
				trace();
				testDateTimeScale();
			}
			
			private function testLinearScale():void
			{
				var arr:Array = [1,25,50,75,100]
				var linearScale:LinearScale = new LinearScale();
				linearScale.dataProvider = arr;
				linearScale.minLayout = 11;
				linearScale.maxLayout = 20;
				linearScale.validate();
				
				trace("linear")
				trace("minValue = " + linearScale.minValue);
				trace("maxValue = " + linearScale.maxValue);
				
				for each(var value:Number in arr)
				{
					trace(value + " to layout = " + linearScale.valueToLayout(value));
				}
				
				for(var a:int = 9; a < 22; a++)
				{
					trace(a + " to value = " +linearScale.layoutToValue(a));
				}
			}
			
			private function testLogScale():void
			{
				var arr:Array = [1,10,100,100,1000,10000,100000]
				var logScale:LogScale = new LogScale();
				logScale.dataProvider = arr;
				logScale.minLayout = 11;
				logScale.maxLayout = 20;
				logScale.validate();
				
				trace("logScale")
				trace("minValue = " + logScale.minValue);
				trace("maxValue = " + logScale.maxValue);
				
				for each(var value:Number in arr)
				{
					trace(value + " to layout = " + logScale.valueToLayout(value));
				}
				
				for(var a:int = 9; a < 22; a++)
				{
					trace(a + " to value = " +logScale.layoutToValue(a));
				}
			}
			
			private function testCategoricalScale():void
			{
				var arr:Array = ['A','B','C','D','E','F','G','H','I','J'];
				var categoricalScale:CategoricalScale = new CategoricalScale();
				categoricalScale.dataProvider = arr;
				categoricalScale.minLayout = 11;
				categoricalScale.maxLayout = 20;
				categoricalScale.validate();
				
				trace("categoricalScale:");
				trace("minValue = " + categoricalScale.minValue);
				trace("maxValue = " + categoricalScale.maxValue);
				for each(var value:String in arr)
				{
					trace(value + " to layout = " + categoricalScale.valueToLayout(value));
				}
				for(var a:int = 9; a < 22; a++)
				{
					trace(a + " to value = " +categoricalScale.layoutToValue(a));
				}
				
				categoricalScale.minValue = "B";
				categoricalScale.validate();
				trace("minValue " + categoricalScale.minValue);
				for each(var value:String in arr)
				{
					trace(value + " to layout = " + categoricalScale.valueToLayout(value));
				}
				for(var a:int = 9; a < 22; a++)
				{
					trace(a + " to value = " +categoricalScale.layoutToValue(a));
				}
				
				categoricalScale.maxValue = "H";
				categoricalScale.validate();
				trace("maxValue " + categoricalScale.maxValue);
				for each(var value:String in arr)
				{
					trace(value + " to layout = " + categoricalScale.valueToLayout(value));
				}
				for(var a:int = 9; a < 22; a++)
				{
					trace(a + " to value = " +categoricalScale.layoutToValue(a));
				}
			}
			
			private function testDateTimeScale():void
			{
				var arr:Array = [new Date(2001,0),new Date(2001,1),new Date(2001,2),new Date(2001,3),
					new Date(2001,4),new Date(2001,5),new Date(2001,6),new Date(2001,7),new Date(2001,8),
					new Date(2001,9),new Date(2001,10),new Date(2001,11)];
				var dateTimeScale:DateTimeScale = new DateTimeScale();
				dateTimeScale.dataProvider = arr;
				dateTimeScale.minLayout = 11;
				dateTimeScale.maxLayout = 20;
				dateTimeScale.validate();
				
				trace("dateTimeScale:");
				trace("minValue = " + dateTimeScale.minValue);
				trace("maxValue = " + dateTimeScale.maxValue);
				for each(var value:Date in arr)
				{
					trace(value + " to layout = " + dateTimeScale.valueToLayout(value));
				}
				for(var a:int = 9; a < 22; a++)
				{
					trace(a + " to value = " + dateTimeScale.layoutToValue(a));
				}
			}
		]]>
	</mx:Script>
	
</mx:Application>
