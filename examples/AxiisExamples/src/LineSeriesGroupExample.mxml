<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:charts="org.axiis.charts.*" 
	layout="absolute"  backgroundGradientColors="[0xDDDDDD,0xF5F5F5]"
	creationComplete="start();" 
	xmlns:axiis="http://www.axiis.org/2009" xmlns:series="org.axiis.charts.series.*" xmlns:groupings="org.axiis.charts.groupings.*" xmlns:degrafa="http://www.degrafa.com/2007" xmlns:states="org.axiis.states.*" xmlns:paint="org.axiis.paint.*" xmlns:Examples="Examples.*" xmlns:axis="org.axiis.charts.axis.*" xmlns:labels="org.axiis.charts.labels.*" xmlns:utils="org.axiis.utils.*">

<mx:Style source="styles/Axiis_Examples.css"/>
<!--mx:Style source="styles/Undefined.css"/-->
<mx:Script>
		<![CDATA[
			import org.axiis.data.DataSet; 
			
			var ds:DataSet = new DataSet(); 
			 
			public function start():void
			{ 
				ds.processCsvAsTable(financeData,false);
				ds.aggregateCollection("rows.columns",["value"]);
				vScale.maxValue=65;
				vScale.minValue=10;
				
				dataProvider=ds.data.rows;
				 
				dc.invalidateDisplayList();
			}
			
			private function filterData(obj:Object):void {
				
			}
			
			private function filterColumns(obj:Object):Boolean {
				//Don't want filter fields, trim columns
				if (obj.index < 1 || obj.index > 4) 
					return false;
				else
					return true;
			}
			
			private function filterRows(obj:Object):Boolean {
				//Trim our rows
				if (obj.index > 136) 
					return false;
				else
					return true;
			}
		]]>
</mx:Script> 
<Examples:ExampleBackground width="{this.width}" height="{this.height}"/>
<mx:Label fontSize="22" fontFamily="Myriad Pro" htmlText="&lt;b&gt;Axiis&lt;/b&gt; - Horizontal Chart" top="20" right="30" color="0xFFFFFF"/>
<mx:Label fontSize="14" fontFamily="Myriad Pro" htmlText="Lines and Areas" top="50" right="30" color="0xFFFFFF" alpha=".9"/>

<!--mx:String id="oilData" source="data/OilConsumedByCountryTrimmed.csv"/-->


<mx:String id="financeData" source="data/historical.csv"/>






<!--  GLOBAL VARIABLES -->
<mx:Object id="dataProvider"/>
<mx:String id="verticalField"/>
<mx:Number id="percentGap">.02</mx:Number>

<!--  EXPRESSIONS -->
<utils:NumericExpression id="tension" value="{slider.value/210}" valueChanged="{if (myLineGroup) dc.invalidateDisplayList();}"/>

<!-- DISPLAY OBJECTS -->
<mx:VBox width="300" top="30" left="50">
	<mx:HBox>
		<mx:Label text="Line Curve" textAlign="right" verticalCenter="0" width="100"/><mx:HSlider width="80" id="slider" minimum="1" maximum="80" value="35" liveDragging="true" showTrackHighlight="false" verticalCenter="-5"/>
	</mx:HBox>
	<mx:HBox>
		<mx:Label text="Stack" textAlign="right" verticalCenter="0" width="100"/><mx:CheckBox id="stack" change="{myLineGroup.mode=(stack.selected) ? 1:0; dc.invalidateDisplayList();}"/>
	</mx:HBox>
	<mx:HBox>
		<mx:Label text="Area" textAlign="right" verticalCenter="0" width="100"/><mx:CheckBox id="area" change="{myLineGroup.showArea=(area.selected) ? true:false; dc.invalidateDisplayList();}"/>
	</mx:HBox>
	<mx:HBox>
		<mx:Label text="Marker" textAlign="right" verticalCenter="0" width="100"/><mx:CheckBox id="showMarker" change="{dc.invalidateDisplayList();}"/>
	</mx:HBox>
	<mx:HBox>
		<mx:Label text="Pivot Series" textAlign="right" verticalCenter="0" width="100"/><mx:CheckBox id="pivot" change="{dc.invalidateDisplayList();}" selected="true"/>
	</mx:HBox>
</mx:VBox>


<!-- CHART -->
	<axiis:LinearScale dataProvider="{dataProvider}" minLayout="0" maxLayout="{myLineGroup.height}" id="vScale"/>
	
	<axiis:DataCanvas height="70%" width="80%" id="dc" top="200" horizontalCenter="0"
		 strokes="{strokes}" fills="{fills}" palettes="{palettes}" showDataTips="true">
	
		<!-- Background -->
		<axiis:backgroundGeometries>
			<axis:VerticalAxis verticalScale="{vScale}" tickStroke="{axisStroke}" width="{dc.width}"  height="{myLineGroup.height}" emitDataTips="false"
				 fontFamily="Myriad Pro" fontColor="0" fontSize="14" tickGap="5" majorTickSpacing="50"/>
			<degrafa:Line x="0" x1="{myLineGroup.x+myLineGroup.width}" y="{myLineGroup.height}" y1="{myLineGroup.height}" stroke="{axisStroke}"/>
		</axiis:backgroundGeometries>
	
		<!-- Layouts -->
		<axiis:layouts>
					<groupings:LineSeriesGroup id="myLineGroup" x="10" y="0"  height="{dc.height-70}" width="{dc.width-35}" 
					  tension="{tension.value}" markerColor="{areaPalette.currentColor}" pivotSeries="{pivot.selected}" dataFilterFunction="{filterRows}"
					  plotFilterFunction="{filterColumns}" markerSize="8" showMarker="{showMarker.selected}"
					  dataProvider="{dataProvider}" plotCollection="columns"
					  dataField="value" verticalScale="{vScale}"
					  stroke="{myStroke}" fill="{areaFill}"
					  />
					
		</axiis:layouts>
	</axiis:DataCanvas>
	
	<mx:Array id="palettes">
		<paint:LayoutPalette id="outerPalette" target="{myLineGroup}" colorFrom="0xCC3333" colorTo="0x3333CC"/> <!-- colorFrom= -->
		<paint:LayoutPalette id="clusterPalette" target="{myLineGroup}" colorFrom="{outerPalette.currentColor}" colorTo="{outerPalette.currentColor | 0x337f00}"/>
		<paint:LayoutPalette id="areaPalette" target="{myLineGroup.plotLayout}" colorFrom="0x3333CC" colorTo="0xCC3333"/>
		<!--paint:LayoutPalette id="stackPalette" target="{myStack}" colorFrom="{outerPalette.currentColor}" colorTo="{outerPalette.currentColor | 0x337f00}"/-->
	</mx:Array>
	<mx:Array id="fills">
		<degrafa:LinearGradientFill id="areaFill" angle="0">
			<degrafa:GradientStop color="{areaPalette.currentColor}" alpha=".75"/>
			<degrafa:GradientStop color="{areaPalette.currentColor | 0x999933}" alpha=".55"/>
		</degrafa:LinearGradientFill>
		<degrafa:LinearGradientFill id="clusterFill" angle="45">
			<degrafa:GradientStop color="{clusterPalette.currentColor}"/>
			<degrafa:GradientStop color="{clusterPalette.currentColor | 0xFFFFFF}" alpha=".85"/>
		</degrafa:LinearGradientFill>
		<!--degrafa:LinearGradientFill id="stackFill" angle="90">
			<degrafa:GradientStop color="{stackPalette.currentColor}"/>
			<degrafa:GradientStop color="{stackPalette.currentColor | 0x333333}" alpha=".7"/>
		</degrafa:LinearGradientFill-->
	</mx:Array>
	<mx:Array id="strokes">
		<degrafa:LinearGradientStroke  id="colStroke" pixelHinting="true" angle="45">
			<degrafa:GradientStop color="0xFFFFFF" alpha=".7"/>
			<degrafa:GradientStop color="0xFFFFFF" alpha=".3"/>
		</degrafa:LinearGradientStroke>
		<degrafa:SolidStroke color="0xFFFFFF" alpha=".3"/>
		<degrafa:SolidStroke color="0x222222" id="axisStroke" pixelHinting="true"/>
		<degrafa:SolidStroke color="{areaPalette.currentColor}" id="myStroke" weight="2" alpha="1" caps="none" pixelHinting="true"/>
	</mx:Array>
	
</mx:Application>