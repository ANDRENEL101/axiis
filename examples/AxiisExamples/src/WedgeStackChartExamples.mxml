<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:charts="org.axiis.charts.*" 
	layout="absolute"
	creationComplete="start();" xmlns:core="org.axiis.core.*" xmlns:axiis="http://www.axiis.org/2009"
	 backgroundGradientColors="[0xFFFFFF,0xDDDDDD]"
	xmlns:geometry="com.degrafa.geometry.*" xmlns:paint="org.axiis.paint.*" xmlns:degrafa="http://www.degrafa.com/2007">
	
	<mx:Script>
		<![CDATA[
			import org.axiis.data.DataSet; 
			
			var ds:DataSet = new DataSet();
			
			public function start():void
			{ 
				
				ds.processXmlString(countryData);
				//Aggregate the detailed data items
				ds.aggregateCollection("country.medal",["count"]);
				//Aggegate the higher level items
				ds.aggregateCollection("country",["medal_count_sum"]);
				wedgeScale.maxValue=ds.data['country_medal_count_sum_sum'];
				dataProvider=ds.data.country;
				
				dc.invalidateDisplayList();
			}
		]]>
	</mx:Script>
	
	<mx:String id="countryData" source="data/countryData.xml"/>
	<mx:Number id="angleGap">.5</mx:Number>
	
	<mx:Object id="dataProvider"/>
	<axiis:LinearScale id="wedgeScale" minLayout="0" maxLayout="{360-wedgeLayout.itemCount*angleGap}" minValue="0" dataProvider="{dataProvider}" />
	<!--axiis:LinearScale id="outerWedgeScale" minLayout="0" maxLayout="{wedgeLayout.currentReference['arc']}" minValue="0" dataProvider="{wedgeLayout.currentDatum}" maxValue="{wedgeLayout.currentDatum['medal_count_sum']}"/-->
	
	
	<axiis:DataCanvas width="{this.height*.6}" height="{this.height*.6}" verticalCenter="0" horizontalCenter="0" id="dc">
		<axiis:palettes>
			<paint:LayoutPalette colorFrom="0xFF0000" colorTo="0x0000FF" target="{wedgeLayout}" id="wedgePalette"/>
			<paint:LayoutPalette colorFrom="{wedgePalette.currentColor}" colorTo="{wedgePalette.currentColor | 0x777777}" target="{outerWedgeLayout}" id="outerWedgePalette"/>
		</axiis:palettes>
		<axiis:fills>
			<degrafa:SolidFill color="{wedgePalette.currentColor}" id="wedgeFill" alpha="1"/>
			<degrafa:SolidFill color="{outerWedgePalette.currentColor}" id="outerWedgeFill" alpha="1"/>
		</axiis:fills>
		<axiis:layouts>
			<!-- wedgeLayout:  This renders the inner ring of wedges -->
			<core:BaseLayout dataProvider="{dataProvider}" width="{dc.width}" height="{dc.width}" id="wedgeLayout" dataField="medal_count_sum">
				<core:referenceRepeater>
					<!-- innerRepeater: the reference repeater wedge for the inner ring of wedges -->
					<core:GeometryRepeater dataProvider="{wedgeLayout.dataItems}" id="innerRepeater" >
						<core:geometry>
							<geometry:Wedge  id="wedge" centerX="{wedgeLayout.width/2}" centerY="{wedgeLayout.width/2}" innerRadius="{(wedgeLayout.width/2)*.5}" outerRadius="{(wedgeLayout.width/2)*.7}" startAngle="360" arc="1"/>
						</core:geometry>
						<core:modifiers>
							<core:PropertyModifier targets="{[wedge]}" property="arc" modifier="{wedgeScale.valueToLayout(wedgeLayout.currentDataValue)-angleGap}" modifierOperator="none"/>
							<core:PropertyModifier targets="{[wedge]}" property="startAngle" modifier="{wedgeScale.valueToLayout(wedgeLayout.currentDataValue)+angleGap}" modifierOperator="subtract"/> 
						</core:modifiers>
					</core:GeometryRepeater>
				</core:referenceRepeater>
				<core:geometries>
					<!-- wedgeRenderer: the drawing geometry for the inner ring of wedges -->
					<geometry:Wedge x="0" y="0" id="wedgeRenderer"
					    innerRadius="{wedgeLayout.currentReference['innerRadius']}" outerRadius="{wedgeLayout.currentReference['outerRadius']}"
 						startAngle="{wedgeLayout.currentReference['startAngle']}" arc="{wedgeLayout.currentReference['arc']}" 
 						centerX="{wedgeLayout.currentReference['centerX']}" centerY="{wedgeLayout.currentReference['centerY']}"
						fill="{wedgeFill}"><geometry:stroke><degrafa:SolidStroke color="0" pixelHinting="true"/></geometry:stroke></geometry:Wedge>  
				</core:geometries>
				<core:layouts>
					<!-- outerWedgeRenderer:  The layout for the outer ring of wedges -->
					<core:BaseLayout dataProvider="{wedgeLayout.currentDatum.medal}" width="{dc.width}" height="{dc.width}" id="outerWedgeLayout" dataField="count">
						<core:referenceRepeater>
							<!-- outerRepeater:  the reference geometry for the outer ring of wedges -->
							<core:GeometryRepeater dataProvider="{outerWedgeLayout.dataItems}" id="outerRepeater">
								<core:geometry>
									<geometry:Wedge  id="outerWedge" centerX="{wedgeLayout.width/2}" centerY="{wedgeLayout.width/2}" innerRadius="{(wedgeLayout.width/2)*.7}" outerRadius="{(wedgeLayout.width/2)}" startAngle="{wedgeLayout.currentReference['startAngle']}" arc="{wedgeScale.valueToLayout(outerWedgeLayout.currentDataValue)}"/>
								</core:geometry>
								<core:modifiers>
									<core:PropertyModifier targets="{[outerWedge]}" property="arc" modifier="{wedgeScale.valueToLayout(outerWedgeLayout.currentDataValue)-angleGap}" modifierOperator="none"/>
									<core:PropertyModifier targets="{[outerWedge]}" property="startAngle" modifier="{(outerWedgeLayout.currentIndex>0) ? wedgeScale.valueToLayout(outerWedgeLayout.dataItems[outerWedgeLayout.currentIndex-1][outerWedgeLayout.dataField]) : 0}" modifierOperator="add"/> 	
								</core:modifiers>
							</core:GeometryRepeater>
						</core:referenceRepeater>
						<core:geometries>
								<!-- outerWedgeRenderer:  the drawing geometry for the outer ring of wedges -->
								<geometry:Wedge x="0" y="0" id="outerWedgeRenderer"
								    innerRadius="{outerWedgeLayout.currentReference['innerRadius']}" outerRadius="{outerWedgeLayout.currentReference['outerRadius']}"
		 							startAngle="{outerWedgeLayout.currentReference['startAngle']}" arc="{outerWedgeLayout.currentReference['arc']}" 
		 							centerX="{outerWedgeLayout.currentReference['centerX']}" centerY="{outerWedgeLayout.currentReference['centerY']}"
									fill="{outerWedgeFill}"><geometry:stroke><degrafa:SolidStroke color="0" pixelHinting="true"/></geometry:stroke></geometry:Wedge> 
						</core:geometries>
					</core:BaseLayout>
				</core:layouts>
			</core:BaseLayout>
		</axiis:layouts>
	</axiis:DataCanvas>
</mx:Application>
